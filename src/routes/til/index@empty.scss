@use "../../styles" as styles;

.wrapper {
  --screen-width: 100vw;
  --width: calc(var(--screen-width) / 3);
  --height: calc(var(--width) * 1.5);
  width: 100%;
  height: var(--height);
  user-select: none;

  @include styles.mixin-screen-from("md") {
    --width: calc(var(--screen-width) / 5);
  }

  @include styles.mixin-screen-from("lg") {
    --width: calc(var(--screen-width) / 8);
  }
}

.wrapper.hide {
  display: none;
}

.wrapper:not(.scroll) {
  .card {
    &:hover {
      box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.05);
      &.current {
        // current
        --scale: 1.1;
      }
      &:not(.current) {
        --hover-x: calc(var(--width) / 3);
        --hover-y: 10px;
        --hover-scale: 0.1;
      }
    }
  }
}
.list {
  position: absolute;
  left: 50%;
  top: 20px;
  transform: translateX(calc(var(--width) / -2));
}

/*
--i: position of `.card` 
--c: position of current `.selected` card
--n: maximum amount of `.card` at each side
--m: total of `.card` in `.list`. ( --m = --n * 2 + 1)

====
- default will assume that all card will be:
  - laid in the left side
  - scale down to make it smaller
- those `.card.current`  will be:
  - placed at center
  - scale = 1
- those `.card` that is after `.card.current` will be
  - place at right side of the `.card.current`
====
--layer: current layer of `.card`:
  - == `1` mean: those 2 cards right next to `.card.current`
  - bigger number means cards are further away from `.card.current`

--scale: use this to adjust dynamically scale of each cards
  - after being scaled, cards are smaller than its original size
  - so to make cards, with different scales value, spread evenly across x-axis
  , we need to move it to the edge of the current cards:
  - the distance of moving is half of the difference between original size and scaled size
    - Eg:
      - original size: 200px
      - scaled size: 150px
      - moving distance: (200px - 150px) / 2 -> `--diff-half-width`

*/
.card {
  --hover-x: 0px;
  --hover-y: 0px;
  --hover-scale: 0;

  --layer: calc(max(var(--i) - var(--c), var(--c) - var(--i)));
  --zindex: calc(var(--m) - var(--layer));

  --scale: calc((1 - var(--layer) * 0.05) + var(--hover-scale));
  --scaled-width: calc(var(--width) * var(--scale));
  --scaled-height: calc(var(--height) * var(--scale));

  --diff-width: calc(var(--width) - var(--scaled-width));
  --diff-height: calc(var(--height) - var(--scaled-height));

  --diff-half-width: calc(var(--diff-width) / 2);
  --space: calc(var(--width) / var(--n));
  --move-x: calc(var(--layer) * var(--space));

  // left side of current
  --translate-x: calc(
    (var(--diff-half-width) + var(--move-x) + var(--hover-x)) * -1
  );
  &.current {
    // current
    --scale: 1;
    --translate-x: 0;

    background: lightgreen;
    ~ .card {
      // right side of current
      --translate-x: calc(
        (var(--diff-half-width) + var(--move-x) + var(--hover-x)) * 1
      );
    }
  }

  --translate-y: var(--hover-y);

  background: lightgrey;
  border-radius: 10px;
  position: absolute;
  text-align: right;
  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.05);
  transition: 200ms ease-in-out;

  width: var(--width);
  height: var(--height);
  z-index: var(--zindex);

  transform: scale(var(--scale)) translateX(var(--translate-x))
    translateY(var(--translate-y));

  span {
    font-size: 30px;
  }
}
